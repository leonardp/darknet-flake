diff --git a/CMakeLists.txt b/CMakeLists.txt
index d34b8f8..3bb10d4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -420,9 +420,7 @@ if(OpenCV_FOUND AND OpenCV_VERSION VERSION_GREATER "3.0" AND BUILD_USELIB_TRACK)
   add_executable(uselib_track ${CMAKE_CURRENT_LIST_DIR}/src/yolo_console_dll.cpp)
 endif()
 
-add_executable(uselib ${CMAKE_CURRENT_LIST_DIR}/src/yolo_console_dll.cpp)
 if(BUILD_AS_CPP)
-  set_target_properties(uselib PROPERTIES LINKER_LANGUAGE CXX)
 endif()
 
 add_executable(darknet ${CMAKE_CURRENT_LIST_DIR}/src/darknet.c ${sources} ${headers} ${cuda_sources})
@@ -433,11 +431,9 @@ endif()
 
 target_include_directories(darknet PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include> $<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/src> $<INSTALL_INTERFACE:${INSTALL_INCLUDE_DIR}> $<BUILD_INTERFACE:${Stb_INCLUDE_DIR}>)
 target_include_directories(dark PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include> $<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/src> $<INSTALL_INTERFACE:${INSTALL_INCLUDE_DIR}> $<BUILD_INTERFACE:${Stb_INCLUDE_DIR}>)
-target_include_directories(uselib PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include> $<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/src> $<INSTALL_INTERFACE:${INSTALL_INCLUDE_DIR}> $<BUILD_INTERFACE:${Stb_INCLUDE_DIR}>)
 
 target_compile_definitions(darknet PRIVATE -DUSE_CMAKE_LIBS)
 target_compile_definitions(dark PRIVATE -DUSE_CMAKE_LIBS)
-target_compile_definitions(uselib PRIVATE -DUSE_CMAKE_LIBS)
 
 if(OpenCV_FOUND AND OpenCV_VERSION VERSION_GREATER "3.0" AND BUILD_USELIB_TRACK AND NOT MANUALLY_EXPORT_TRACK_OPTFLOW)
   target_compile_definitions(dark PUBLIC TRACK_OPTFLOW=1)
@@ -456,7 +452,6 @@ endif()
 
 if(OpenCV_FOUND)
   target_link_libraries(darknet PRIVATE ${OpenCV_LINKED_COMPONENTS})
-  target_link_libraries(uselib PRIVATE ${OpenCV_LINKED_COMPONENTS})
   target_link_libraries(dark PUBLIC ${OpenCV_LINKED_COMPONENTS})
   target_include_directories(dark PRIVATE ${OpenCV_INCLUDE_DIRS})
   target_compile_definitions(darknet PRIVATE -DOPENCV)
@@ -480,11 +475,9 @@ if(MSVC)
   target_link_libraries(darknet PRIVATE wsock32)
   target_link_libraries(dark PUBLIC PThreads_windows::PThreads_windows)
   target_link_libraries(dark PUBLIC wsock32)
-  target_link_libraries(uselib PRIVATE PThreads_windows::PThreads_windows)
   target_compile_definitions(darknet PRIVATE -D_CRT_RAND_S -DNOMINMAX -D_USE_MATH_DEFINES)
   target_compile_definitions(dark PRIVATE -D_CRT_RAND_S -DNOMINMAX -D_USE_MATH_DEFINES)
   target_compile_definitions(dark PUBLIC -D_CRT_SECURE_NO_WARNINGS)
-  target_compile_definitions(uselib PRIVATE -D_CRT_RAND_S -DNOMINMAX -D_USE_MATH_DEFINES)
 endif()
 
 if(MSVC OR MINGW)
@@ -494,14 +487,11 @@ endif()
 
 target_link_libraries(darknet PRIVATE Threads::Threads)
 target_link_libraries(dark PUBLIC Threads::Threads)
-target_link_libraries(uselib PRIVATE Threads::Threads)
 
 if(ENABLE_ZED_CAMERA)
   target_link_libraries(darknet PRIVATE ${ZED_LIBRARIES})
   target_link_libraries(dark PUBLIC ${ZED_LIBRARIES})
-  target_link_libraries(uselib PRIVATE ${ZED_LIBRARIES})
   target_compile_definitions(darknet PRIVATE -DZED_STEREO)
-  target_compile_definitions(uselib PRIVATE -DZED_STEREO)
   target_compile_definitions(dark PUBLIC -DZED_STEREO)
 endif()
 
@@ -520,7 +510,6 @@ if(USE_INTEGRATED_LIBS)
   target_compile_definitions(dark PRIVATE -D_TIMESPEC_DEFINED)
 endif()
 
-target_link_libraries(uselib PRIVATE dark)
 if(OpenCV_FOUND AND OpenCV_VERSION VERSION_GREATER "3.0" AND BUILD_USELIB_TRACK)
   target_link_libraries(uselib_track PRIVATE dark)
   target_compile_definitions(uselib_track PRIVATE TRACK_OPTFLOW=1)
@@ -553,7 +542,6 @@ install(TARGETS dark EXPORT DarknetTargets
   PUBLIC_HEADER DESTINATION "${INSTALL_INCLUDE_DIR}"
   COMPONENT dev
 )
-install(TARGETS uselib darknet
   DESTINATION "${INSTALL_BIN_DIR}"
 )
 if(OpenCV_FOUND AND OpenCV_VERSION VERSION_GREATER "3.0" AND BUILD_USELIB_TRACK)
